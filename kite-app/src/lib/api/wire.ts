// Code generated by tygo. DO NOT EDIT.
import {APIResponse} from "./base"

//////////
// source: compile.go

export interface CompileJSRequest {
  source: string;
}
export interface CompileJSResponseData {
  wasm_bytes: string;
}
export type CompileJSResponse = APIResponse<CompileJSResponseData>;

//////////
// source: deployment.go

export interface Deployment {
  id: string;
  name: string;
  key: string;
  description: string;
  guild_id: string;
  plugin_version_id: null | string;
  wasm_size: number /* int */;
  manifest_default_config: { [key: string]: string};
  manifest_events: string[];
  manifest_commands: string[];
  config: { [key: string]: string};
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type DeploymentListResponse = APIResponse<Deployment[]>;
export type DeploymentGetResponse = APIResponse<Deployment>;
export interface DeploymentCreateRequest {
  key: string;
  name: string;
  description: string;
  plugin_version_id: null | string;
  wasm_bytes: string;
  manifest_default_config: { [key: string]: string};
  manifest_events: string[];
  manifest_commands: string[];
  config: { [key: string]: string};
}
export type DeploymentCreateResponse = APIResponse<Deployment>;
export type DeploymentDeleteResponse = APIResponse<{
  }>;
export interface DeploymentLogEntry {
  id: string;
  deployment_id: string;
  level: string;
  message: string;
  created_at: string /* RFC3339 */;
}
export type DeploymentLogEntryListResponse = APIResponse<DeploymentLogEntry[]>;
export interface DeploymentLogSummary {
  deployment_id: string;
  total_count: number /* int */;
  error_count: number /* int */;
  warn_count: number /* int */;
  info_count: number /* int */;
  debug_count: number /* int */;
}
export type DeploymentLogSummaryResponse = APIResponse<DeploymentLogSummary>;

//////////
// source: guild.go

export interface Guild {
  id: string;
  name: string;
  icon: null | string;
  description: null | string;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type GuildListResponse = APIResponse<Guild[]>;
export type GuildGetResponse = APIResponse<Guild>;

//////////
// source: kv_storage.go

export interface KVStorageNamespace {
  namespace: string;
  key_count: number /* int */;
}
export interface KVStorageValue {
  namespace: string;
  key: string;
  value: any /* kvmodel.TypedKVValue */;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type KVStorageNamespaceListResponse = APIResponse<KVStorageNamespace[]>;
export type KVStorageNamespaceKeyListResponse = APIResponse<KVStorageValue[]>;

//////////
// source: quick_access.go

export interface QuickAccessItem {
  id: string;
  guild_id: string;
  type: string;
  name: string;
  updated_at: string /* RFC3339 */;
}
export type QuickAccessItemListResponse = APIResponse<QuickAccessItem[]>;

//////////
// source: workspace.go

export interface Workspace {
  id: string;
  guild_id: string;
  name: string;
  description: string;
  files: WorkspaceFile[];
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export interface WorkspaceFile {
  path: string;
  content: string;
}
export type WorkspaceGetResponse = APIResponse<Workspace>;
export type WorkspaceListResponse = APIResponse<Workspace[]>;
export interface WorkspaceCreateRequest {
  name: string;
  description: string;
  files: WorkspaceFile[];
}
export type WorkspaceCreateResponse = APIResponse<Workspace>;
export interface WorkspaceUpdateRequest {
  name: string;
  description: string;
  files: WorkspaceFile[];
}
export type WorkspaceUpdateResponse = APIResponse<Workspace>;
export type WorkspaceDeleteResponse = APIResponse<{
  }>;
