// Code generated by tygo. DO NOT EDIT.
import {APIResponse} from "./response"
import {Manifest} from "./manifest"

export type Base64 = string

//////////
// source: app.go

export interface App {
  id: string;
  owner_user_id: string;
  token_invalid: boolean;
  public_key: string;
  user_id: string;
  user_name: string;
  user_discriminator: string;
  user_avatar: null | string;
  user_banner: null | string;
  user_bio: null | string;
  status_type: string;
  status_activity_type: null | number;
  status_activity_name: null | string;
  status_activity_state: null | string;
  status_activity_url: null | string;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export interface AppCreateRequest {
  token: string;
}
export type AppCreateResponse = APIResponse<App>;
export type AppListResponse = APIResponse<App[]>;
export type AppGetResponse = APIResponse<App>;
export interface AppTokenUpdateRequest {
  token: string;
}
export type AppTokenUpdateResponse = APIResponse<App>;
export interface AppStatusUpdateRequest {
  status_type: string;
  activity_type: null | number;
  activity_name: null | string;
  activity_state: null | string;
  activity_url: null | string;
}
export type AppStatusUpdateResponse = APIResponse<App>;
export interface AppUserUpdateRequest {
  user_name: string;
  user_avatar: null | string;
  user_banner: null | string;
  user_bio: null | string;
}
export type AppUserUpdateResponse = APIResponse<App>;

//////////
// source: app_entitlement.go

/**
 * AppEntitlementResolved represents the resolved entitlements for an app
 * All times are in milliseconds
 */
export interface AppEntitlementResolved {
  monthly_execution_time_limit: number /* int */;
}
export type AppEntitlementResolvedGetResponse = APIResponse<AppEntitlementResolved>;

//////////
// source: app_usage.go

/**
 * AppUsageSummary represents a summary of the usage of a app
 * All times are in milliseconds
 */
export interface AppUsageSummary {
  total_event_count: number /* int */;
  success_event_count: number /* int */;
  total_event_execution_time: number /* float32 */;
  avg_event_execution_time: number /* float32 */;
  total_event_total_time: number /* float32 */;
  avg_event_total_time: number /* float32 */;
  total_call_count: number /* int */;
  success_call_count: number /* int */;
  total_call_total_time: number /* float32 */;
  avg_call_total_time: number /* float32 */;
}
export type AppUsageSummaryGetResponse = APIResponse<AppUsageSummary>;

//////////
// source: auth.go

export interface AuthLoginStartRequest {
}
export interface AuthCLIStartResponseData {
  code: string;
}
export type AuthCLIStartResponse = APIResponse<AuthCLIStartResponseData>;
export interface AuthCLICallbackResponseData {
  message: string;
}
export type AuthCLICallbackResponse = APIResponse<AuthCLICallbackResponseData>;
export interface AuthCLICheckResponseData {
  pending: boolean;
  token?: string;
}
export type AuthCLICheckResponse = APIResponse<AuthCLICheckResponseData>;

//////////
// source: compile.go

export interface CompileRequest {
  type: string;
  source: string;
}
export interface CompileResponseData {
  wasm_bytes: Base64;
}
export type CompileResponse = APIResponse<CompileResponseData>;

//////////
// source: deployment.go

export interface Deployment {
  id: string;
  name: string;
  key: string;
  description: string;
  app_id: string;
  plugin_version_id: null | string;
  wasm_size: number /* int */;
  manifest: Manifest;
  config: { [key: string]: string};
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type DeploymentListResponse = APIResponse<Deployment[]>;
export type DeploymentGetResponse = APIResponse<Deployment>;
export interface DeploymentCreateRequest {
  key: string;
  name: string;
  description: string;
  plugin_version_id: null | string;
  wasm_bytes: Base64;
  config: { [key: string]: string};
}
export type DeploymentCreateResponse = APIResponse<Deployment>;
export type DeploymentDeleteResponse = APIResponse<{
  }>;

//////////
// source: deployment_log.go

export interface DeploymentLogEntry {
  id: number /* uint64 */;
  deployment_id: string;
  level: string;
  message: string;
  created_at: string /* RFC3339 */;
}
export type DeploymentLogEntryListResponse = APIResponse<DeploymentLogEntry[]>;
export interface DeploymentLogSummary {
  deployment_id: string;
  total_count: number /* int */;
  error_count: number /* int */;
  warn_count: number /* int */;
  info_count: number /* int */;
  debug_count: number /* int */;
}
export type DeploymentLogSummaryGetResponse = APIResponse<DeploymentLogSummary>;

//////////
// source: deployment_metric.go

/**
 * DeploymentEventMetricEntry represents a single deployment event metric entry
 * All times are in milliseconds
 */
export interface DeploymentEventMetricEntry {
  timestamp: string /* RFC3339 */;
  total_count: number /* int */;
  success_count: number /* int */;
  average_execution_time: number /* float32 */;
  average_total_time: number /* float32 */;
}
export type DeploymentMetricEventsListResponse = APIResponse<DeploymentEventMetricEntry[]>;
/**
 * DeploymentCallMetricEntry represents a single deployment call metric entry
 * All times are in milliseconds
 */
export interface DeploymentCallMetricEntry {
  timestamp: string /* RFC3339 */;
  total_count: number /* int */;
  success_count: number /* int */;
  average_total_time: number /* float32 */;
}
export type DeploymentMetricCallsListResponse = APIResponse<DeploymentCallMetricEntry[]>;

//////////
// source: kv_storage.go

export interface KVStorageNamespace {
  namespace: string;
  key_count: number /* int */;
}
export interface KVStorageValue {
  namespace: string;
  key: string;
  value: any /* kv.TypedKVValue */;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type KVStorageNamespaceListResponse = APIResponse<KVStorageNamespace[]>;
export type KVStorageNamespaceKeyListResponse = APIResponse<KVStorageValue[]>;

//////////
// source: quick_access.go

export interface QuickAccessItem {
  id: string;
  app_id: string;
  type: string;
  name: string;
  updated_at: string /* RFC3339 */;
}
export type QuickAccessItemListResponse = APIResponse<QuickAccessItem[]>;

//////////
// source: user.go

export interface User {
  id: string;
  username: string;
  email: string;
  discriminator: null | string;
  global_name: null | string;
  avatar: null | string;
  public_flags: number /* int */;
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export type UserGetResponse = APIResponse<User>;

//////////
// source: workspace.go

export interface Workspace {
  id: string;
  app_id: string;
  type: string;
  name: string;
  description: string;
  files: WorkspaceFile[];
  created_at: string /* RFC3339 */;
  updated_at: string /* RFC3339 */;
}
export interface WorkspaceFile {
  path: string;
  content: string;
}
export type WorkspaceGetResponse = APIResponse<Workspace>;
export type WorkspaceListResponse = APIResponse<Workspace[]>;
export interface WorkspaceCreateRequest {
  type: string;
  name: string;
  description: string;
  files: WorkspaceFile[];
}
export type WorkspaceCreateResponse = APIResponse<Workspace>;
export interface WorkspaceUpdateRequest {
  name: string;
  description: string;
  files: WorkspaceFile[];
}
export type WorkspaceUpdateResponse = APIResponse<Workspace>;
export type WorkspaceDeleteResponse = APIResponse<{
  }>;
